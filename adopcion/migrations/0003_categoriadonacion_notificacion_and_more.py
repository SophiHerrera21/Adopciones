# Generated by Django 4.2.23 on 2025-06-25 03:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('adopcion', '0002_historialmascota_citapreadopcion_seguimientomascota'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaDonacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoría de Donación',
                'verbose_name_plural': 'Categorías de Donaciones',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('solicitud', 'Nueva Solicitud'), ('cita', 'Cita Programada'), ('estado', 'Cambio de Estado'), ('donacion', 'Nueva Donación'), ('seguimiento', 'Seguimiento'), ('general', 'General')], max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('leida', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_lectura', models.DateTimeField(blank=True, null=True)),
                ('donacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adopcion.donacion')),
            ],
            options={
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AlterModelOptions(
            name='seguimientomascota',
            options={'ordering': ['-fecha_seguimiento']},
        ),
        migrations.AlterUniqueTogether(
            name='seguimientomascota',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='solicitudadopcion',
            name='acepta_visitas_seguimiento',
        ),
        migrations.AddField(
            model_name='mascota',
            name='categoria',
            field=models.CharField(choices=[('cachorro', 'Cachorro'), ('joven', 'Joven'), ('adulto', 'Adulto'), ('senior', 'Senior'), ('especial', 'Necesidades Especiales'), ('urgente', 'Adopción Urgente')], default='adulto', max_length=20),
        ),
        migrations.AddField(
            model_name='seguimientomascota',
            name='administrador',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seguimientomascota',
            name='estado_salud',
            field=models.TextField(default='Bueno'),
        ),
        migrations.AddField(
            model_name='seguimientomascota',
            name='fecha_seguimiento',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='seguimientomascota',
            name='peso',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='seguimientomascota',
            name='proxima_revision',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='mascota',
            name='nombre',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='mascota',
            name='peso',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='en kilogramos', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.1, message='El peso debe ser mayor a 0.1 kg.'), django.core.validators.MaxValueValidator(200.0, message='El peso no puede exceder 200 kg.')]),
        ),
        migrations.AlterField(
            model_name='seguimientomascota',
            name='mascota',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='adopcion.mascota'),
        ),
        migrations.AlterField(
            model_name='seguimientomascota',
            name='observaciones',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='apellido',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El apellido solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='ciudad',
            field=models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator(message='La ciudad solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='nombre',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='ocupacion',
            field=models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator(message='La ocupación solo puede contener letras y espacios.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='telefono',
            field=models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='El teléfono solo puede contener números, espacios, guiones, paréntesis y el símbolo +.', regex='^[\\d\\s\\-\\+\\(\\)]+$')]),
        ),
        migrations.DeleteModel(
            name='SeguimientoAdopcion',
        ),
        migrations.AddField(
            model_name='notificacion',
            name='mascota',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adopcion.mascota'),
        ),
        migrations.AddField(
            model_name='notificacion',
            name='solicitud',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adopcion.solicitudadopcion'),
        ),
        migrations.AddField(
            model_name='notificacion',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='adoptante',
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='completada',
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='fecha_completada',
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='fecha_inicio',
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='numero_cita',
        ),
        migrations.RemoveField(
            model_name='seguimientomascota',
            name='proxima_cita',
        ),
        migrations.AlterField(
            model_name='donacion',
            name='categoria_insumo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='adopcion.categoriadonacion'),
        ),
    ]
