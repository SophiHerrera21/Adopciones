from django.core.management.base import BaseCommand
from adopcion.models import Usuario, Notificacion
from django.utils import timezone

class Command(BaseCommand):
    help = 'Crear una notificaci√≥n personalizada para un usuario espec√≠fico'

    def add_arguments(self, parser):
        parser.add_argument('username', type=str, help='Nombre de usuario')
        parser.add_argument('titulo', type=str, help='T√≠tulo de la notificaci√≥n')
        parser.add_argument('mensaje', type=str, help='Mensaje de la notificaci√≥n')
        parser.add_argument('--tipo', type=str, default='general', help='Tipo de notificaci√≥n (default: general)')

    def handle(self, *args, **options):
        username = options['username']
        titulo = options['titulo']
        mensaje = options['mensaje']
        tipo = options['tipo']

        try:
            # Buscar el usuario
            usuario = Usuario.objects.get(username=username)
            
            # Crear la notificaci√≥n
            notificacion = Notificacion.objects.create(
                usuario=usuario,
                tipo=tipo,
                titulo=titulo,
                mensaje=mensaje,
                fecha_creacion=timezone.now()
            )
            
            self.stdout.write(
                self.style.SUCCESS(
                    f'‚úÖ Notificaci√≥n creada exitosamente para {usuario.get_full_name()} ({username})\n'
                    f'üìù T√≠tulo: {titulo}\n'
                    f'üí¨ Mensaje: {mensaje}\n'
                    f'üìÖ Fecha: {notificacion.fecha_creacion.strftime("%d/%m/%Y %H:%M")}'
                )
            )
            
        except Usuario.DoesNotExist:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Error: No se encontr√≥ el usuario "{username}"')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Error al crear la notificaci√≥n: {str(e)}')
            ) 